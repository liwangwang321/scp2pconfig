server:
  port: 4101
  context-path: /
spring:
  redis:
    database: 0
    host: 192.168.47.137
    port: 6379
    password: 123456
  datasource:
    #1.JDBC
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.47.137:3308/scp2p?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    username: root
    password: 123
    druid:
      #2.连接池配置
      #初始化连接池的连接数量 大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      #配置获取连接等待超时的时间
      max-wait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 30000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: true
      test-on-return: false
      # 是否缓存preparedStatement，也就是PSCache  官方建议MySQL下建议关闭   个人建议如果想用SQL防火墙 建议打开
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filter:
        stat:
          merge-sql: true
          slow-sql-millis: 5000
      #3.基础监控配置
      web-stat-filter:
        enabled: true
        url-pattern: /*
        #设置不统计哪些URL
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        session-stat-enable: true
        session-stat-max-count: 100
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: true
        #设置监控页面的登录名和密码
        login-username: admin
        login-password: admin
        allow: 127.0.0.1
        #deny: 192.168.1.100
  application: # \u8BBE\u7F6E\u5E94\u7528\u7684\u57FA\u672C\u4FE1\u606F(\u540D\u79F0
    name: microservice-business

eureka:
  instance:
    hostname: localhost  #eureka\u5BA2\u6237\u7AEF\u4E3B\u673A\u5B9E\u4F8B\u540D\u79F0
    appname: microservice-business  #\u5BA2\u6237\u7AEF\u670D\u52A1\u540D
    instance-id: microservice-business:4101 #\u5BA2\u6237\u7AEF\u5B9E\u4F8B\u540D\u79F0
    prefer-ip-address: true #\u662F\u5426\u663E\u793AIP
  client:
    service-url:
      #\u8BBE\u7F6E\u4E0EEureka\u6CE8\u518C\u4E2D\u5FC3\u4EA4\u4E92\u7684\u5730\u5740\uFF0C\u662F\u6240\u6709\u6CE8\u518C\u4E2D\u5FC3
      defaultZone: http://localhost:2001/eureka/  #\u628A\u670D\u52A1\u6CE8\u518C\u5230eureka\u6CE8\u518C\u4E2D\u5FC3

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 2000

info:
  groupId: com.scp2p
  artifactId: microservice-hystrix-business-4101
  version: 1.0-SNAPSHOT
  userName: djtao
  phone: 123456


#pagehelper\u5206\u9875\u63D2\u4EF6\u914D\u7F6E
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

mybatis:
  mapper-locations: classpath:mapper/*Dao.xml #注意：一定要对应mapper映射xml文件的所在路径
  type-aliases-package: com.scp2p.microservicecommon.business.entity  # 注意：对应实体类的路径
